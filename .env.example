# Django Configuration
# Generate a new SECRET_KEY with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=django-insecure-CHANGE-THIS-TO-A-RANDOM-50-CHARACTER-STRING-ABC123XYZ789
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1
DJANGO_SETTINGS_MODULE=core.settings.dev

# Database Configuration
# Docker Compose: Use these settings (mysql://pulsewatch:pulsewatch@db:3306/pulsewatch_dev)
# Local without Docker: Use sqlite:///db.sqlite3 or configure local MySQL
MYSQL_HOST=db
MYSQL_PORT=3306
MYSQL_USER=pulsewatch
MYSQL_PASSWORD=pulsewatch
MYSQL_DATABASE=pulsewatch_dev
MYSQL_ROOT_PASSWORD=rootpassword
DATABASE_URL=mysql://pulsewatch:pulsewatch@db:3306/pulsewatch_dev

# Redis Configuration
# For Docker: redis://redis:6379/0
# For local: redis://localhost:6379/0
REDIS_URL=redis://redis:6379/0

# Celery Configuration
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}

# Observability
LOG_LEVEL=INFO
PROMETHEUS_METRICS_ENABLED=True

# Security (Development)
# IMPORTANT: Set these to True in production
SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
SECURE_HSTS_SECONDS=0

# Optional: HTTPS for local development
# Set to True to enable HTTPS with self-signed certificates
# See README.md for instructions on generating certificates
USE_HTTPS=False
